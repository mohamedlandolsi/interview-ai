#!/usr/bin/env node

/**
 * Check and fix Supabase Storage bucket configuration
 */

console.log('üîß Supabase Storage Bucket Configuration Check')
console.log('=============================================\n')

console.log('‚ùå BUCKET NOT FOUND ERROR IDENTIFIED')
console.log('The "avatars" bucket does not exist in Supabase Storage.')
console.log('')
console.log('üéØ SOLUTION STEPS:')
console.log('1. Go to your Supabase Dashboard')
console.log('2. Navigate to Storage section')
console.log('3. Create a new bucket named "avatars"')
console.log('4. Make it PUBLIC (enable public access)')
console.log('5. Set appropriate policies')
console.log('')
console.log('üìã Manual Steps:')
console.log('   ‚Ä¢ Open: https://supabase.com/dashboard/project/[your-project-id]/storage/buckets')
console.log('   ‚Ä¢ Click "New bucket"')
console.log('   ‚Ä¢ Name: "avatars"')
console.log('   ‚Ä¢ Public bucket: ‚úÖ CHECKED')
console.log('   ‚Ä¢ Click "Save"')
console.log('')
console.log('üõ°Ô∏è Security Policies:')
console.log('   After creating the bucket, you may need to set policies:')
console.log('   ‚Ä¢ Allow authenticated users to upload/update their own avatars')
console.log('   ‚Ä¢ Allow public read access to avatars')
console.log('')
console.log('üîç Current Issue:')
console.log('   - Avatar upload API stores URLs in database ‚úÖ')
console.log('   - Cache-busting implementation ‚úÖ') 
console.log('   - Frontend component logic ‚úÖ')
console.log('   - Supabase Storage bucket ‚ùå MISSING')
console.log('')
console.log('‚ö†Ô∏è  ALTERNATIVE TEMPORARY FIX:')
console.log('   If you want to test without creating the bucket,')
console.log('   you can modify the upload API to use a different')
console.log('   bucket name that already exists in your Supabase project.')

// Check .env for project details
const fs = require('fs')
try {
  const envLocal = fs.readFileSync('.env.local', 'utf8')
  const projectUrlMatch = envLocal.match(/NEXT_PUBLIC_SUPABASE_URL=(.+)/)
  if (projectUrlMatch) {
    const projectUrl = projectUrlMatch[1].trim()
    const projectId = projectUrl.split('//')[1].split('.')[0]
    console.log('')
    console.log('üîó Your Supabase Project:')
    console.log(`   Project URL: ${projectUrl}`)
    console.log(`   Project ID: ${projectId}`)
    console.log(`   Dashboard: https://supabase.com/dashboard/project/${projectId}/storage/buckets`)
  }
} catch (error) {
  console.log('')
  console.log('üí° Check your .env.local for NEXT_PUBLIC_SUPABASE_URL to find your project ID')
}
